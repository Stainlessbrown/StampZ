name: Build StampZ Cross-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: windows-x64
            ext: .exe
          - os: macos-13
            name: mac-intel
            ext: ""
          - os: macos-latest
            name: mac-arm
            ext: ""
          - os: ubuntu-latest
            name: linux-x64
            ext: ""
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create macOS icon (icns)
      if: startsWith(matrix.os, 'macos')
      run: |
        # Create icns file from PNG for macOS
        mkdir -p StampZ.iconset
        # Use sips (built into macOS) to create different sizes
        sips -z 16 16 "resources/StampZ_256.png" --out "StampZ.iconset/icon_16x16.png"
        sips -z 32 32 "resources/StampZ_256.png" --out "StampZ.iconset/icon_16x16@2x.png"
        sips -z 32 32 "resources/StampZ_256.png" --out "StampZ.iconset/icon_32x32.png"
        sips -z 64 64 "resources/StampZ_256.png" --out "StampZ.iconset/icon_32x32@2x.png"
        sips -z 128 128 "resources/StampZ_256.png" --out "StampZ.iconset/icon_128x128.png"
        sips -z 256 256 "resources/StampZ_256.png" --out "StampZ.iconset/icon_128x128@2x.png"
        sips -z 256 256 "resources/StampZ_256.png" --out "StampZ.iconset/icon_256x256.png"
        sips -z 512 512 "resources/StampZ_256.png" --out "StampZ.iconset/icon_256x256@2x.png"
        sips -z 512 512 "resources/StampZ_256.png" --out "StampZ.iconset/icon_512x512.png"
        sips -z 1024 1024 "resources/StampZ_256.png" --out "StampZ.iconset/icon_512x512@2x.png" 2>/dev/null || sips -z 512 512 "resources/StampZ_256.png" --out "StampZ.iconset/icon_512x512@2x.png"
        # Create the icns file
        iconutil -c icns StampZ.iconset
        ls -la StampZ.icns
    
    - name: Verify spec file
      run: |
        echo "Verifying spec file exists..."
        ls -la stampz.spec
        echo "Current directory contents:"
        ls -la
        echo "Python version:"
        python --version
        echo "PyInstaller version:"
        python -m PyInstaller --version
        
    - name: Build with PyInstaller
      run: |
        # Use spec file for consistent cross-platform builds
        echo "Starting PyInstaller build..."
        python -m PyInstaller stampz.spec --distpath dist --workpath build --specpath . --log-level=INFO
        echo "Build completed. Checking dist directory:"
        ls -la dist/
        
    - name: Rename output for platform
      run: |
        cd dist
        echo "Current dist contents:"
        ls -la
        if [ "${{ runner.os }}" = "macOS" ]; then
          # macOS: Rename app bundle and create zip
          if [ -d "StampZ.app" ]; then
            mv StampZ.app StampZ_${{ matrix.name }}.app
            zip -r StampZ_${{ matrix.name }}.zip StampZ_${{ matrix.name }}.app
            echo "Created macOS app bundle: StampZ_${{ matrix.name }}.zip"
            ls -la StampZ_${{ matrix.name }}.zip
          else
            echo "ERROR: StampZ.app not found!"
            ls -la
            exit 1
          fi
        elif [ "${{ runner.os }}" = "Windows" ]; then
          # Windows: Rename executable
          if [ -f "StampZ.exe" ]; then
            mv StampZ.exe StampZ_${{ matrix.name }}.exe
            echo "Created Windows executable: StampZ_${{ matrix.name }}.exe"
            ls -la StampZ_${{ matrix.name }}.exe
          else
            echo "ERROR: StampZ.exe not found!"
            ls -la
            exit 1
          fi
        else
          # Linux: Rename executable
          if [ -f "StampZ" ]; then
            mv StampZ StampZ_${{ matrix.name }}
            echo "Created Linux executable: StampZ_${{ matrix.name }}"
            ls -la StampZ_${{ matrix.name }}
          else
            echo "ERROR: StampZ executable not found!"
            ls -la
            exit 1
          fi
        fi
    
    - name: Upload macOS app bundle
      if: startsWith(matrix.os, 'macos')
      uses: actions/upload-artifact@v4
      with:
        name: StampZ_${{ matrix.name }}
        path: dist/StampZ_${{ matrix.name }}.zip
        
    - name: Upload Windows/Linux executable
      if: "!startsWith(matrix.os, 'macos')"
      uses: actions/upload-artifact@v4
      with:
        name: StampZ_${{ matrix.name }}
        path: dist/StampZ_${{ matrix.name }}${{ matrix.ext }}
